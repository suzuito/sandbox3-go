
services:
  blog-db:
    image: postgres:17
    ports:
      - 9004:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root"]
      interval: 3s
      timeout: 60s
      retries: 5
  blog-db-init:
    build:
      dockerfile: services/blog/Dockerfile.db-init
    working_dir: /sandbox3-go
    volumes:
      - ./:/sandbox3-go:rw
    command: sh -c "cd services/blog && make db-init DB_HOST=blog-db DB_NAME=blog && make db-init DB_HOST=blog-db DB_NAME=blog_test"
    depends_on:
      blog-db:
        condition: service_healthy
        restart: true
  blog-server-loc:
    image: golang:1.23.4
    working_dir: /sandbox3-go
    volumes:
      - ./:/sandbox3-go:rw
    ports:
      - 9001:8080
    command: sh -c "cd services/blog && make server-init-loc"
    environment:
      SITE_ORIGIN: http://localhost:9001
      GOOGLE_TAG_MANAGER_ID: dummy_tag_id
      ADMIN_TOKEN: dummy_admin_token
      DIR_PATH_HTML_TEMPLATE: go/internal/web
      DIR_PATH_CSS: go/internal/web/_css
    depends_on:
      blog-db:
        condition: service_healthy
      blog-db-init:
        condition: service_completed_successfully
  blog-test:
    build:
      dockerfile: services/blog/Dockerfile.test
    working_dir: /sandbox3-go
    volumes:
      - ./:/sandbox3-go:rw
    ports:
      - 9003:8080
    command: sh -c "cd services/blog && make test merge-test-report"
    depends_on:
      blog-db:
        condition: service_healthy
      blog-db-init:
        condition: service_completed_successfully
